name: "tests"
on:
  pull_request:
  push:
    branches:
      - "*"
#  pull_request_review:
#    types: [ submitted ]
env:
  extensions: "json"
  cache-version: "1"
  composer-version: "v2"
  composer-install: "composer install --no-interaction --no-progress --prefer-dist"
  coverage: "none"

jobs:
  tests:
    name: "Tests"
    runs-on: "${{ matrix.operating-system }}"

    strategy:
      matrix:
        php-version: ["7.4", "8.0"]
        operating-system: ["ubuntu-latest"]
        composer-args: [ "" ]
        include:
          - php-version: "7.4"
            operating-system: "ubuntu-latest"
            composer-args: "--prefer-lowest"
      fail-fast: false

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v2"

      - name: "Setup PHP cache environment"
        id: "extcache"
        uses: "shivammathur/cache-extensions@v1"
        with:
          php-version: "${{ matrix.php-version }}"
          extensions: "${{ env.extensions }}"
          key: "${{ env.cache-version }}"

      - name: "Cache PHP extensions"
        uses: "actions/cache@v4"
        with:
          path: "${{ steps.extcache.outputs.dir }}"
          key: "${{ steps.extcache.outputs.key }}"
          restore-keys: "${{ steps.extcache.outputs.key }}"

      - name: "Install PHP"
        uses: "shivammathur/setup-php@v2"
        with:
          php-version: "${{ matrix.php-version }}"
          extensions: "${{ env.extensions }}"
          tools: "composer:${{ env.composer-version }}"
          coverage: "${{ env.coverage }}"
        env:
          COMPOSER_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: "Setup problem matchers for PHP"
        run: 'echo "::add-matcher::${{ runner.tool_cache }}/php.json"'

      - name: "Get Composer cache directory"
        id: "composercache"
        run: 'echo "::set-output name=dir::$(composer config cache-files-dir)"'

      - name: "Cache PHP dependencies"
        uses: "actions/cache@v4"
        with:
          path: "${{ steps.composercache.outputs.dir }}"
          key: "${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}"
          restore-keys: "${{ runner.os }}-composer-"

      - name: "Install dependencies"
        run: "${{ env.composer-install }}"

      - name: "Regenerate autoloader"
        run: "composer dump-autoload --optimize"

      - name: "Env variables"
        run: |
          echo "API_MERCHANT=${{ secrets.API_MERCHANT }}" >> .env
          echo "API_SECRET=${{ secrets.API_SECRET }}" >> .env
          echo "API_URL=${{ secrets.API_URL }}" >> .env

      - name: "Check access to test enviroment"
        run: |
          curl -H "CF-Access-Client-Id: ${{ secrets.CF_ACCESS_ID}}" \
          -H "CF-Access-Client-Secret: ${{ secrets.CF_ACCESS_SECRET}}" \
          -v https://payments.comgate-test.cz/core/index/hello 2>&1 | grep 'HTTP/2 200'

      - name: "Build Codeception actors"
        run: "vendor/bin/codecept build"

      - name: "Tests"
        run: "make tests"

      - name: "Upload test output"
        if: ${{ failure() }}
        uses: actions/upload-artifact@v4
        with:
          name: output
          path: tests/**/output
